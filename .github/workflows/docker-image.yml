name: 'Manual Staging APK Build'

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Choose App to Deploy'
        # required: true
        type: choice
        default: ''
        options:
          - 'QACE CMS'
          - 'QACE WEB'
          - 'PMS WEB'
          - 'PMS SERVER'

env:
  REGISTRY: ghcr.io
  REPO_NAME: nurdynzo

jobs:
  deployQaceCMS:
    name: Qace CMS Deployment
    runs-on: ubuntu-latest
    if: inputs.publish == 'QACE CMS'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag, and push image to GHCR
      id: build-image
      env:
        IMAGE_NAME: qace-cms
        COMMIT_ID: ${{ github.sha }}
      run: |
        IMAGE_TAG=$(echo $COMMIT_ID | cut -c 1-7)
        docker build -t $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG -f ./apps/qacehomes-cms/Dockerfile.dev .
        docker push $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG
        echo "image=$REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Server Instance
      env:
          IMAGE: ${{ steps.build-image.outputs.image }}
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: IMAGE,TOKEN
          script: |
            echo "$TOKEN" | docker login ghcr.io -u USERNAME --password-stdin
            export QACE_CMS_IMAGE="$IMAGE"
            docker-compose -f /home/ubuntu/qace/qace-cms/compose.yaml up -d
            docker ps

  deployQaceWEB:
    name: Qace WEB Deployment
    runs-on: ubuntu-latest
    if: inputs.publish == 'QACE WEB'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag, and push image to GHCR
      id: build-image
      env:
        IMAGE_NAME: qace-web
        COMMIT_ID: ${{ github.sha }}
      run: |
        IMAGE_TAG=$(echo $COMMIT_ID | cut -c 1-7)
        docker build -t $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG -f ./apps/qacehomes-web/Dockerfile .
        docker push $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG
        echo "image=$REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Server Instance
      env:
          IMAGE: ${{ steps.build-image.outputs.image }}
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: IMAGE,TOKEN
          script: |
            echo "$TOKEN" | docker login ghcr.io -u USERNAME --password-stdin
            export QACE_WEB_IMAGE="$IMAGE"
            docker-compose -f /home/ubuntu/qace/qace-web/compose.yaml up -d
            docker ps

  deployPMSserver:
    name: PMS Server Deployment
    runs-on: ubuntu-latest
    if: inputs.publish == 'PMS SERVER'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag, and push image to GHCR
      id: build-image
      env:
        IMAGE_NAME: pms-server
        COMMIT_ID: ${{ github.sha }}
      run: |
        IMAGE_TAG=$(echo $COMMIT_ID | cut -c 1-7)
        docker build -t $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG -f ./apps/pms-server/Dockerfile .
        docker push $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG
        echo "image=$REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Server Instance
      env:
          IMAGE: ${{ steps.build-image.outputs.image }}
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: IMAGE,TOKEN
          script: |
            echo "$TOKEN" | docker login ghcr.io -u USERNAME --password-stdin
            export PMS_SERVER_IMAGE="$IMAGE"
            docker-compose -f /home/ubuntu/qace/pms-server/compose.yaml up -d
            docker ps        

  deployPMSWEB:
    name: PMS WEB Deployment
    runs-on: ubuntu-latest
    if: inputs.publish == 'PMS WEB'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag, and push image to GHCR
      id: build-image
      env:
        IMAGE_NAME: pms-web
        COMMIT_ID: ${{ github.sha }}
      run: |
        IMAGE_TAG=$(echo $COMMIT_ID | cut -c 1-7)
        docker build -t $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG -f ./apps/pms-web/Dockerfile .
        docker push $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG
        echo "image=$REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Server Instance
      env:
          IMAGE: ${{ steps.build-image.outputs.image }}
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: IMAGE,TOKEN
          script: |
            echo "$TOKEN" | docker login ghcr.io -u USERNAME --password-stdin
            export PMS_WEB_IMAGE="$IMAGE"
            docker-compose -f /home/ubuntu/qace/pms-web/compose.yaml up -d
            docker ps  
